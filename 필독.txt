업데이트 이후 꼭 읽어야 할 부분만 씁시다. 이 줄 이후의 줄에 새로 쓸 글들을 추가하세요.

========================================================

////////////////////////2019-04-02 업로드 : 권영혁//////////////////////////////////////
아웃라스트 음악 반응이 너무 핫해서 테스트용 음악을 바꿨습니다
FirstScene의 Player에 j, k키를 누르면 음악 트랜지션이 바뀌니(쓰는 함수가 다 다르니 참고) 살펴보세요.
UI Sound Play
	사운드 매니저에 UISound 정보를 저장했습니다. 플레이할때마다 만약 볼륨 등의 정보가 바뀌었다면 이제 UI 사운드도 변경이 가능합니다

ForgetSound
	스마트 포인터를 이용한다 하더라도 한번 로드한 사운드를 내려야 할때가 생깁니다. 특히 Bgm은 시간이 길어 wav파일을 램에 올리면 3분짜리 노래는 10MB를 차지하기도 함
	ForgetSound 함수를 이용해서 SoundMap에 저장된 사운드를 제거하세요

PlayBgm
	이제 Key(std::string) 없는 인자가 있습니다 -> 익명으로 버퍼에 저장되어, 다른 곡으로 변경시 트랜지션 이후 자동삭제됩니다
	기본값을 가진 Parameter 중 루프 여부를 묻는 Bool값이 생겼습니다. 한번 나오고 끝날 곡이면 false 선택하세요.


/////////////////////////2019-03-30 업로드 : 권영혁//////////////////////////////////////


공지
프로젝트 설정-> C/C++ -> 코드 생성 부분의 
'향상된 인스트럭션 명령어 셋' (Enhanced Instruction Set) 이 AVX2로 설정되어 있었습니다.
좀 더 많은 기종의 호환을 위해 잠시 AVX로 변경했습니다.
이는 Core i 시리즈 하스웰 코어 이상에서만 먹히는 세트라서 이전 컴퓨터를 쓰시거나
더 하위 기종을 쓰고 작업하는 경우 차질이 생길 수 있으니 유의하세요

추가된 것 : 사운드 매니저, 사운드소스 컴포넌트
사용법
1. 사운드매니저
	CreateSoundEffect
		: 사운드를 로드하는데 씁니다. 사운드 컴포넌트 내부의 사운드는 이 함수가 아니라 컴포넌트 내부의 자체 함수를 쓰니까 상관하지 마세요.
	SoundPlay
		: 3D 사운드가 아닌 BGM / UI 사운드 등을 플레이할 때 사용하도록 했습니다.
		SOUND_TYPE 플래그를 통해 자동으로 Loop 여부가 결정됩니다
	GetListenerPos, GetListenerEulerRot
		: "리스너"의 위치와 회전을 알 수 있습니다. 사운드는 기본적으로 약간 타원형으로 설계되어 있어 방향이 좀 중요할 수 있습니다
		물론 실제 체감 성능은 거기서 거기입니다.
	SetListenerPos, SetListenerEulerRot
		: "리스너"의 위치와 회전을 설정합니다. 오일러 각도의 Gimbal lock을 방지하기 위해 앞벡터와 위벡터를 둘다 입력해줘야 합니다.

	SetBgmVolume/ SetBgmPitch / SetBgmPan
		: Bgm 사운드의 볼륨 / 피치/ 패닝 등을 설정합니다
		볼륨이아 당연히 음량이고, (0~1.f)
		피치는 음색의 높낮이를 결정합니다(0-1.f)
		패닝은 좌우의 음량비율을 뜻하는데, 이것을 조정하여 입체음향을 흉내내거나 할 수 있습니다

	AllStop
		: 재생중인 모든 음향을 중지합니다.

2.사운드소스
	전체적으로 사운드매니저와 사용법이 거의 같습니다.
	DirectXTK에서 설정해주는대로 SetRadius 함수가 존재하는데, 음향이 어디까지 퍼질지를 어떻게 설정해주는지는 아직 잘 모르겠습니다.
	사운드 컴포넌트에 사운드를 적재하려면 LoadSounds 함수를 주목해주세요

변경점
에디터와 DirecXTK 사운드가 서로 친하지 않다는 것을 발견하고 Core에 CSoundManager 를 업데이트해주는 함수를 따로 마련했습니다.
에디터가 아닌 일반 Logic()에서만 동작하니 참고해 주세요.
...