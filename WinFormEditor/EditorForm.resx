<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="Btn_AllClear.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEASABIAAD/7gAOQWRvYmUAZAAAAAAB/+EWRkV4aWYAAE1NACoAAAAIAAwBAAAD
        AAAAAQEhAAABAQADAAAAAQCuAAABAgADAAAAAwAAAJ4BBgADAAAAAQACAAABEgADAAAAAQABAAABFQAD
        AAAAAQADAAABGgAFAAAAAQAAAKQBGwAFAAAAAQAAAKwBKAADAAAAAQACAAABMQACAAAAHgAAALQBMgAC
        AAAAFAAAANKHaQAEAAAAAQAAAOYAAAEeAAgACAAIAEgAAAABAAAASAAAAAEAAEFkb2JlIFBob3Rvc2hv
        cCBDUzYgKFdpbmRvd3MpADIwMTk6MDM6MjUgMDk6NTQ6MzkAAASQAAAHAAAABDAyMjGgAQADAAAAAf//
        AACgAgAEAAAAAQAAAGWgAwAEAAAAAQAAAFEAAAAAAAAABgEDAAMAAAABAAYAAAEaAAUAAAABAAABbAEb
        AAUAAAABAAABdAEoAAMAAAABAAIAAAIBAAQAAAABAAABfAICAAQAAAABAAAUwgAAAAAAAABIAAAAAQAA
        AEgAAAAB/9j/4gxYSUNDX1BST0ZJTEUAAQEAAAxITGlubwIQAABtbnRyUkdCIFhZWiAHzgACAAkABgAx
        AABhY3NwTVNGVAAAAABJRUMgc1JHQgAAAAAAAAAAAAAAAQAA9tYAAQAAAADTLUhQICAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABFjcHJ0AAABUAAAADNkZXNjAAABhAAA
        AGx3dHB0AAAB8AAAABRia3B0AAACBAAAABRyWFlaAAACGAAAABRnWFlaAAACLAAAABRiWFlaAAACQAAA
        ABRkbW5kAAACVAAAAHBkbWRkAAACxAAAAIh2dWVkAAADTAAAAIZ2aWV3AAAD1AAAACRsdW1pAAAD+AAA
        ABRtZWFzAAAEDAAAACR0ZWNoAAAEMAAAAAxyVFJDAAAEPAAACAxnVFJDAAAEPAAACAxiVFJDAAAEPAAA
        CAx0ZXh0AAAAAENvcHlyaWdodCAoYykgMTk5OCBIZXdsZXR0LVBhY2thcmQgQ29tcGFueQAAZGVzYwAA
        AAAAAAASc1JHQiBJRUM2MTk2Ni0yLjEAAAAAAAAAAAAAABJzUkdCIElFQzYxOTY2LTIuMQAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAWFlaIAAAAAAAAPNRAAEAAAAB
        FsxYWVogAAAAAAAAAAAAAAAAAAAAAFhZWiAAAAAAAABvogAAOPUAAAOQWFlaIAAAAAAAAGKZAAC3hQAA
        GNpYWVogAAAAAAAAJKAAAA+EAAC2z2Rlc2MAAAAAAAAAFklFQyBodHRwOi8vd3d3LmllYy5jaAAAAAAA
        AAAAAAAAFklFQyBodHRwOi8vd3d3LmllYy5jaAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAABkZXNjAAAAAAAAAC5JRUMgNjE5NjYtMi4xIERlZmF1bHQgUkdCIGNvbG91ciBz
        cGFjZSAtIHNSR0IAAAAAAAAAAAAAAC5JRUMgNjE5NjYtMi4xIERlZmF1bHQgUkdCIGNvbG91ciBzcGFj
        ZSAtIHNSR0IAAAAAAAAAAAAAAAAAAAAAAAAAAAAAZGVzYwAAAAAAAAAsUmVmZXJlbmNlIFZpZXdpbmcg
        Q29uZGl0aW9uIGluIElFQzYxOTY2LTIuMQAAAAAAAAAAAAAALFJlZmVyZW5jZSBWaWV3aW5nIENvbmRp
        dGlvbiBpbiBJRUM2MTk2Ni0yLjEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHZpZXcAAAAAABOk/gAU
        Xy4AEM8UAAPtzAAEEwsAA1yeAAAAAVhZWiAAAAAAAEwJVgBQAAAAVx/nbWVhcwAAAAAAAAABAAAAAAAA
        AAAAAAAAAAAAAAAAAo8AAAACc2lnIAAAAABDUlQgY3VydgAAAAAAAAQAAAAABQAKAA8AFAAZAB4AIwAo
        AC0AMgA3ADsAQABFAEoATwBUAFkAXgBjAGgAbQByAHcAfACBAIYAiwCQAJUAmgCfAKQAqQCuALIAtwC8
        AMEAxgDLANAA1QDbAOAA5QDrAPAA9gD7AQEBBwENARMBGQEfASUBKwEyATgBPgFFAUwBUgFZAWABZwFu
        AXUBfAGDAYsBkgGaAaEBqQGxAbkBwQHJAdEB2QHhAekB8gH6AgMCDAIUAh0CJgIvAjgCQQJLAlQCXQJn
        AnECegKEAo4CmAKiAqwCtgLBAssC1QLgAusC9QMAAwsDFgMhAy0DOANDA08DWgNmA3IDfgOKA5YDogOu
        A7oDxwPTA+AD7AP5BAYEEwQgBC0EOwRIBFUEYwRxBH4EjASaBKgEtgTEBNME4QTwBP4FDQUcBSsFOgVJ
        BVgFZwV3BYYFlgWmBbUFxQXVBeUF9gYGBhYGJwY3BkgGWQZqBnsGjAadBq8GwAbRBuMG9QcHBxkHKwc9
        B08HYQd0B4YHmQesB78H0gflB/gICwgfCDIIRghaCG4IggiWCKoIvgjSCOcI+wkQCSUJOglPCWQJeQmP
        CaQJugnPCeUJ+woRCicKPQpUCmoKgQqYCq4KxQrcCvMLCwsiCzkLUQtpC4ALmAuwC8gL4Qv5DBIMKgxD
        DFwMdQyODKcMwAzZDPMNDQ0mDUANWg10DY4NqQ3DDd4N+A4TDi4OSQ5kDn8Omw62DtIO7g8JDyUPQQ9e
        D3oPlg+zD88P7BAJECYQQxBhEH4QmxC5ENcQ9RETETERTxFtEYwRqhHJEegSBxImEkUSZBKEEqMSwxLj
        EwMTIxNDE2MTgxOkE8UT5RQGFCcUSRRqFIsUrRTOFPAVEhU0FVYVeBWbFb0V4BYDFiYWSRZsFo8WshbW
        FvoXHRdBF2UXiReuF9IX9xgbGEAYZRiKGK8Y1Rj6GSAZRRlrGZEZtxndGgQaKhpRGncanhrFGuwbFBs7
        G2MbihuyG9ocAhwqHFIcexyjHMwc9R0eHUcdcB2ZHcMd7B4WHkAeah6UHr4e6R8THz4faR+UH78f6iAV
        IEEgbCCYIMQg8CEcIUghdSGhIc4h+yInIlUigiKvIt0jCiM4I2YjlCPCI/AkHyRNJHwkqyTaJQklOCVo
        JZclxyX3JicmVyaHJrcm6CcYJ0kneierJ9woDSg/KHEooijUKQYpOClrKZ0p0CoCKjUqaCqbKs8rAis2
        K2krnSvRLAUsOSxuLKIs1y0MLUEtdi2rLeEuFi5MLoIuty7uLyQvWi+RL8cv/jA1MGwwpDDbMRIxSjGC
        Mbox8jIqMmMymzLUMw0zRjN/M7gz8TQrNGU0njTYNRM1TTWHNcI1/TY3NnI2rjbpNyQ3YDecN9c4FDhQ
        OIw4yDkFOUI5fzm8Ofk6Njp0OrI67zstO2s7qjvoPCc8ZTykPOM9Ij1hPaE94D4gPmA+oD7gPyE/YT+i
        P+JAI0BkQKZA50EpQWpBrEHuQjBCckK1QvdDOkN9Q8BEA0RHRIpEzkUSRVVFmkXeRiJGZ0arRvBHNUd7
        R8BIBUhLSJFI10kdSWNJqUnwSjdKfUrESwxLU0uaS+JMKkxyTLpNAk1KTZNN3E4lTm5Ot08AT0lPk0/d
        UCdQcVC7UQZRUFGbUeZSMVJ8UsdTE1NfU6pT9lRCVI9U21UoVXVVwlYPVlxWqVb3V0RXklfgWC9YfVjL
        WRpZaVm4WgdaVlqmWvVbRVuVW+VcNVyGXNZdJ114XcleGl5sXr1fD19hX7NgBWBXYKpg/GFPYaJh9WJJ
        Ypxi8GNDY5dj62RAZJRk6WU9ZZJl52Y9ZpJm6Gc9Z5Nn6Wg/aJZo7GlDaZpp8WpIap9q92tPa6dr/2xX
        bK9tCG1gbbluEm5rbsRvHm94b9FwK3CGcOBxOnGVcfByS3KmcwFzXXO4dBR0cHTMdSh1hXXhdj52m3b4
        d1Z3s3gReG54zHkqeYl553pGeqV7BHtje8J8IXyBfOF9QX2hfgF+Yn7CfyN/hH/lgEeAqIEKgWuBzYIw
        gpKC9INXg7qEHYSAhOOFR4Wrhg6GcobXhzuHn4gEiGmIzokziZmJ/opkisqLMIuWi/yMY4zKjTGNmI3/
        jmaOzo82j56QBpBukNaRP5GokhGSepLjk02TtpQglIqU9JVflcmWNJaflwqXdZfgmEyYuJkkmZCZ/Jpo
        mtWbQpuvnByciZz3nWSd0p5Anq6fHZ+Ln/qgaaDYoUehtqImopajBqN2o+akVqTHpTilqaYapoum/adu
        p+CoUqjEqTepqaocqo+rAqt1q+msXKzQrUStuK4trqGvFq+LsACwdbDqsWCx1rJLssKzOLOutCW0nLUT
        tYq2AbZ5tvC3aLfguFm40blKucK6O7q1uy67p7whvJu9Fb2Pvgq+hL7/v3q/9cBwwOzBZ8Hjwl/C28NY
        w9TEUcTOxUvFyMZGxsPHQce/yD3IvMk6ybnKOMq3yzbLtsw1zLXNNc21zjbOts83z7jQOdC60TzRvtI/
        0sHTRNPG1EnUy9VO1dHWVdbY11zX4Nhk2OjZbNnx2nba+9uA3AXcit0Q3ZbeHN6i3ynfr+A24L3hROHM
        4lPi2+Nj4+vkc+T85YTmDeaW5x/nqegy6LzpRunQ6lvq5etw6/vshu0R7ZzuKO6070DvzPBY8OXxcvH/
        8ozzGfOn9DT0wvVQ9d72bfb794r4Gfio+Tj5x/pX+uf7d/wH/Jj9Kf26/kv+3P9t////7QAMQWRvYmVf
        Q00AAv/uAA5BZG9iZQBkgAAAAAH/2wCEAAwICAgJCAwJCQwRCwoLERUPDAwPFRgTExUTExgRDAwMDAwM
        EQwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwBDQsLDQ4NEA4OEBQODg4UFA4ODg4UEQwMDAwMEREM
        DAwMDAwRDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDP/AABEIAFEAZQMBIgACEQEDEQH/3QAEAAf/
        xAE/AAABBQEBAQEBAQAAAAAAAAADAAECBAUGBwgJCgsBAAEFAQEBAQEBAAAAAAAAAAEAAgMEBQYHCAkK
        CxAAAQQBAwIEAgUHBggFAwwzAQACEQMEIRIxBUFRYRMicYEyBhSRobFCIyQVUsFiMzRygtFDByWSU/Dh
        8WNzNRaisoMmRJNUZEXCo3Q2F9JV4mXys4TD03Xj80YnlKSFtJXE1OT0pbXF1eX1VmZ2hpamtsbW5vY3
        R1dnd4eXp7fH1+f3EQACAgECBAQDBAUGBwcGBTUBAAIRAyExEgRBUWFxIhMFMoGRFKGxQiPBUtHwMyRi
        4XKCkkNTFWNzNPElBhaisoMHJjXC0kSTVKMXZEVVNnRl4vKzhMPTdePzRpSkhbSVxNTk9KW1xdXl9VZm
        doaWprbG1ub2JzdHV2d3h5ent8f/2gAMAwEAAhEDEQA/APVUkkklKSSSSUpJJJJSkkkklKSXN9Jzci3q
        +fvsL2UtvawNB9JpZkWyxjn+669ns+02fzP83jVf0e9bnT7XX4GPc8y+ypjnHxJaC5JTYSSSSUpJJJJT
        /9D1VJJJJSkkkklKSSTJKXSVb9p9N9T0/tdPqAwWeo3dP9XcrAcCAQZB1BHCSnk+jvB651d3uc4VXgvI
        2t2tycrZVTX/AKOl3q78j/tRk3ZFf/aX9H0HRTPScT/imD7gub6VdUOtdWYXMa91eUGjduseW5F7nbvz
        WsrYWtqxWfzH9Jt/py6Pon/JOJ/xTfyJKbySSSSlJJJJKf/R9VSSSSUpJJU+q55wMQ2sZ62RY5tWNQDB
        susOyqvd+az8+6z/AAOOy2//AAaSkXUurfZrq8LEqOX1G8bq8Zp2hrAdrsnKt932fGb+/wDTtf8Ao6K7
        bFXb9X35oFnXch2c8wfszJqxWHnazHY7dft/0mW+5Wuk9LbgVPdY/wBfNySLM3KIg2WRGg19Oipv6PGo
        /wADT/24r6Snmh9WugdTzs1uT0/Gdi4kYtNIqY0Bz2VZWTkB1bWu9R/rUU/8D9m/R/ztih0/oB+yOd03
        Lt6dnY1ttLn1ndTYanmuqzKwX/q73XUNrsu9BuP+ksf6a0ul5FNB6p69ja/s+VZZe55ADGOZXfXY9zva
        2v7O5nuRehBzun/aXNLDmWWZIa4Q4Mte6zH3sP0LPsxp9Rn+kSU8ZXUaMx2d1XMonHtyRbXjbr3by7Iy
        sirC3M/Vd3r4T8iv/C/zd+T/ADtS1+m/WLIffidNwcR9VBsNRuyTJOyxrnsx/oeoz7EMi9l383s9JEze
        k5HS+nZ3Uh6FltL3ZYoFZLG1T+v1brXvstflYLfS/Mqr9Ov0aa0ugUYWV1Nl76WsyMCo14u2TFcNx2gv
        fusc+hgezd/3asSU9SkkkkpSSSSSn//S9VSSSSUpZdrftH1hoY4SzAx3XgHj1b3fZqrB/LropzK//Qpa
        iyc+wYHWMbPskYuUz7He/syzd6mA+z9yt9j8jG3/AOnyMZJTrKn+1sB2eOnV2izKhznVs92wN59ZzfbU
        79xj/eqX1lbmPwnNqudjYwb+sXVnbYNzmVNiwe6umhr7MrI2e/8AQ+lv/SWp3UYODndNwcJjKtjrHGis
        aiv0ntdfZH/DNqr9Wz+csekptZfROk5uSzLy8Wu6+sANe4ToDuY17fo2tY47q/U/m1eTTCdJTnfWK1tX
        Qeovd2xrgB4ksc1jP7bztWB9Wya+rVsBmWPYT5Abv++I/wBcOpsdZjdJrM+rYLcgjgCofaKKf677W1Xv
        /wCAr/Sf0itD+q9Js6kbY9tNZJPm72M/6PqJKetSSVTM6pgYX8/aA79we53+Y1JTbSWB/wA7afXj7O/0
        OC6Rvn+p/wCZpJKf/9P1VJJJJSkO+inJpfRexttNrSyyt4lrmuEOY5p/NciJJKcK7Hz+l41rJb1LpAY7
        1KMlwF1dUfpGfaLf0WXQyvf7MrZds/7U2qrgZGZ0yhvUbMBlHT8osNrnWvszGNdDMa/Ode3bsp3MryKP
        V/UmepZ6tldb1q9eBuxK8Ea/b7q8d48aifWzG/28KnJai9ZqZd0fOpsEssx7WOHGjmOa7hJTl5/1r6K2
        mwuyNtuKReawNz3MqLbcj0gzc1/6Hcz6X+Er/wBIhZZ+sOF093W33E5Gzfl4Bg1U0n3/AKvAd+s9Pa7d
        bf8ApPtv6f8AQf0SqnLzugZR6FldQ+3ZFlbMcuFNprg1V1e6r2Usd6TP0zmM/wALb6d/+i9PudCPEJKe
        M6p9VsbBw8fqlDvWza3fr2S5xd67cght1/uLmtey51NjH/8AcOr7L/No3Sus0dOxH1igvyHvJ3TAIj2b
        nfyFffRWPq51PpFs+nh03Y7YMH0DWbMQsP8AwWM+un1P9PRYuZAtrsux79b8aw1Wn94gNfXd/wChOPZT
        k/yPW9NJTo5fXOpZUg2elWfzKvb97/prPjv3PJSSSUpJJJJT/9T1VJfKqSSn6qSXyqkkp+m+o/03pf8A
        4af/AO22WjdT/wCTcv8A4mz/AKly+XkklP0nlf8AiSt/9N7v/PJWhg/0LH/4pn/UhfLiSSn6V6t/Reqf
        +ET/ANTlLmOr/wDL+f8A1cf/AM9BeIpJKfZkl4ykkp9mSXjKSSn/2f/bAEMABgQEBAUEBgUFBgkGBQYJ
        CwgGBggLDAoKCwoKDBAMDAwMDAwQDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDP/bAEMBBwcHDQwN
        GBAQGBQODg4UFA4ODg4UEQwMDAwMEREMDAwMDAwRDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDP/A
        ABEIAFEAZQMBEQACEQEDEQH/xAAfAAAABwEBAQEBAAAAAAAAAAAEBQMCBgEABwgJCgv/xAC1EAACAQMD
        AgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPBUtHhMxZi8CRygvElQzRTkqKyY3PC
        NUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3
        R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZqbnJ2en5KjpKWmp6ipqqusra6vr/xAAfAQAC
        AgMBAQEBAQAAAAAAAAABAAIDBAUGBwgJCgv/xAC1EQACAgECAwUFBAUGBAgDA20BAAIRAwQhEjFBBVET
        YSIGcYGRMqGx8BTB0eEjQhVSYnLxMyQ0Q4IWklMlomOywgdz0jXiRIMXVJMICQoYGSY2RRonZHRVN/Kj
        s8MoKdPj84SUpLTE1OT0ZXWFlaW1xdXl9UZWZnaGlqa2xtbm9kdXZ3eHl6e3x9fn9zhIWGh4iJiouMjY
        6Pg5SVlpeYmZqbnJ2en5KjpKWmp6ipqqusra6vr/3QAEAA3/2gAMAwEAAhEDEQA/APVOKuxV2KuxV2Ku
        xV2KuxV1cVdirsVdirsVf//Q9U4q7FXYq7FXYq7FXYq7FXm/lLWtRufN2vetcNLBaR3scKRhvqqNDfy1
        RGf4pp0BT6zJx9FecdtF8VvPirOPL13LeaFp13K3OW4toZJWpSrtGCxoPfFUwxV2KuxV/9H1TirsVdir
        sVdirsVdirsVeS+T5kbzx5tcmR5Ftr1TM4EcfppqV1wihjoD6cLGVnuP+Pi5muI+X+i8Y1XoPksk+U9I
        r2tYh9ygYqnOKuxV2Kv/0vVOKuxV2KuxV2KuqPuxVLR5m8tmc241WzNwDxMP1iLmCe3HlXFUxV1ZQykM
        rCqsNwQd6g4q8e8q3lsvnXzXE0kKTSQamqAyc7iVo7+dmLE/CqRoVWK1T4oEVrmVV+vJyVekeSv+UT0n
        /mGj/ViqdYq7FXYq/wD/0/VOKuxV2KuxVj3mTzWdOu7fSNLtTqvmK8UyW+nI4jWOEHi1zdSkMLe2U/Dz
        Ks8r/u4I5ZMVS5PIEurqs/nW/fWpmox02IvbaXEQa8Ut0blPxNR6l28zN/Kn2cVSlPy08g+Ytd1mPUPL
        2nSaXpZTTLKzW2ijCySwRXVzcBo1VvUcTQQq1eUP1Z/TZfVkxVR8v+QW/REr+XtWudA1zT7q5tJJ7cl7
        S4a2mMcUl1YuTbu00CxyTNAtu3qSP6bJirB7a1az1iXWvMusWXOwudRW6ttPL3sgmL3N1cRWXKMfVeRn
        snuI+P71f3c9y372LFWW+W/zE1CW90ry9o2kT21kbh7ZrzUXLM3o3Cs6W4AT1ENkLidJv7vgsXHl8fBV
        6yMVdirsVf/U9U4q7FXYqlHmrXjoukNcwwfW7+eRLXTLENxM93O3CKPlvxSvxzSUb0bdJZ2+GNsVUfKf
        liPRLSaS4m+va1qLi41nVGFHuLilNhU+nBEv7u2g5cYYVVfifnI6qe4qxTyvf2VkfNJvbiOD6hqdxPfy
        SuqLFFJDHPHI7MQqx/V2RuR+H4W/kbFUX5GV30Aag8Twtq1xc6iscgKyCK6maS3Dod0kFsYRIh+xJyXF
        WH6z5T1Dy15c1vzCosZ7m1lk1RLJbZnijta/6fEGld5JXurFfS/Yij9ONIYY1xVryBY6LqXmaG9ms44d
        Q0O2MGmcKuBblEt1Bdy0jPAgdFb9tbqTl8fxYq9RxV2KuxV//9X1TirsVdirGLtPr/5h2MMg5QaJYSXq
        qen1m+kNtFIB/PHBDeR/6t02KsnxVJx5s0F9fTQIbpZ9UKu8sEP7z0VjG/rMtViY1+BHPN/2V+1iqzV/
        JPlTWNTg1PU9Lgu763VUjmkWtVRiyK614yqjFmjWRX9Nmbh9rFU7xVj35h3Mdt5D8xTPuBpt2FX+ZmhZ
        UQe7uVVcVYD+W7NB5sgiVuQeKWJj4gLy/Wi4q9fxV2KuxV//1vVOKuxV2KsU164XRPN+m61PVdM1GH9E
        X8/7EU5lElg8h24RvI9xbc/9/wBxbJ+1iqj+ZSaxNo0sdteSadpojP6Qvbd/TnHqOkS0kALRwwK8l1cM
        nF2WFIuapJLiq97HRNG1zy1oukQxWvpPcSNYwDdbb6rIrTyAb09ZYo/Vk+KSR/tM2KstLAEA9+mKt1xV
        5d+b/maJ7jTPK8Dcjczrc6i60oq2o+sQQ9PtvKsU7qPsQR/vPguI+SqH/LCzefzG1zT93aQMzHweQhEH
        0r6n/A4q9ZxVKtX806FpAIvbtEkHSBfjkP8AsFqfvxVi3/K2bL66F/R8v1HcGXkvq1rseFacaf5eKv8A
        /9f1TirsVdiqhf2FnqFnNZXsKXNnco0VxbyqHSSNxRkZTsysDirDrzTtd8tabdQ1j8w+UlikFxY6hKFu
        7e2p+8QXEtYruBI+fwXXCbh9u5lxVKtB1HWfLtimvTaDDZ+XtTaA3Usl1PPq8MUtEtp75p148IQyR3EC
        yv8AUk9ST1ZI43xVG69+a3kqOzuWfUBHdaYVvHt1BeV4rUrLcekELK9IeSNRuH7yP4v3iYqhNWP5haR5
        fk84S3jNfmEy6toB4NbWlo1Xpb0Vq3Onq3KWf959dRZ/3H+8kUKqR+aPyt0zRtH0/wAy2Uhu9at3/wBz
        epSOzm9jv2CzT/EWVXSZoZEdfiWzi+q8mj4YqjPK3nOx0DSZoVsWm1CaUuZKhUZaUTk25HDccVX/ACv2
        sVQWreefMmpcle4+qwN/um2qmx7F/tn78VSAAVJ/aO5J6nFW8Vf/0PVOKuxV2KuxVjfnxTdaTb6KoJ/T
        l5BYTINuVszeteKT/l2UNyuKozzlaRXfk/XLSYcorjT7qKRakVV4HVhUUPQ9sVeS655C1NvIuqa6Ndv7
        i3h09pFs7o25Q2sFr8UQKQIxiQmZkT/dsqRzt8fpPGq9x2ZfEYqwOawt0/LnzN5WuuXoaRaXlhFxNG+p
        NbmS0KE71itnjh9T/f8ABJirzNUuoLi7sL01vtOne1un6CQqFeOYDt9Zt5Ibnj+x63p/sYqvxV2KuxV/
        /9H1TirsVdirsVSHzF/x2fK//bSl/wC6beYqjPM3/KN6t/zB3H/JpsVSPU//ACUl3/2wJP8AqCOKsh0T
        /jjWH/MND/ybGKpH5s/45nmj/tin/iF1irzDzb/yn+u/8Y7D/qGGKoHFXYq7FX//2Q==
</value>
  </data>
</root>